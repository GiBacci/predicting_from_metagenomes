rownames(gene.counts) <- r.name
gene.counts <- t(gene.counts)
gene.counts <- gene.counts[rownames(taxa.ab),]
saveRDS(gene.counts, "./data/gene_counts.rds")
gene.meta <- readRDS("/home/giovannib/Dropbox/CF_longitudinal_metagenome/gene_assignments/annotations.rds")
gene.meta <- readRDS("/home/giovannib/Dropbox/CF_longitudinal_metagenome/gene_assignments/annotations.rds")
gene.meta <- gene.meta %>%
as.data.frame() %>%
rename_all(gsub, pattern = " ", replacement = "_") %>%
separate_rows(COG_cat, sep = ", ")
gene.meta <- gene.meta[match(colnames(gene.counts), gene.meta$best.og),]
saveRDS(gene.meta, "./data/gene_meta.rds")
meta.genes <- readRDS("data/gene_meta.rds")
meta.genes$COG_cat
merge(meta.genes, genes.contrib)
meta.genes <- merge(meta.genes, genes.contrib)
meta.genes$COG_cat <- reorder(meta.genes$COG_cat, meta.genes$contrib)
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
install.packages("multcompView")
library(multcompView)
multcompBoxplot(contrib ~ COG_cat, data = meta.genes)
?multcompBoxplot
multcompBoxplot(contrib ~ COG_cat, data = meta.genes,
horizontal = F)
tuk <- TukeyHSD(genes.aov)
multcompLetters(tuk)
?multcompLetters
multcompLetters(tuk$COG_cat[,4])
labs <- multcompLetters(tuk$COG_cat[,4])
labs <- data.frame(COG_cat = names(labs),
labs = labs)
labs$Letters
labs <- multcompLetters(tuk$COG_cat[,4])$letters
labs <- data.frame(COG_cat = names(labs),
labs = labs)
labs
labs <- multcompLetters(tuk$COG_cat[,4])$letters
labs <- multcompLetters(tuk$COG_cat[,4])$letters
labs
labs <- multcompLetters(tuk$COG_cat[,4])
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs
labs <- data.frame(COG_cat = names(labs),
labs = labs)
labs
ggplot(meta.genes, aes(x = COG_cat, y = contrib)) +
stat_summary(geom = "errorbar", fun.data = mean_cl_boot) +
stat_summary(geom = "col", fun.y = mean)
by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot)
do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean
genes.mean <- merge(genes.mean, labs)
genes.mean
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar()
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col()
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs))
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax))
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = 1)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1)
meta.genes <- readRDS("data/gene_meta.rds")
table(meta.genes$COG_cat)
meta.genes <- readRDS("data/gene_meta.rds")
table(meta.genes$COG_cat)
meta.genes <- merge(meta.genes, genes.contrib)
meta.genes$COG_cat <- reorder(meta.genes$COG_cat, meta.genes$contrib)
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
tuk <- TukeyHSD(genes.aov)
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs <- data.frame(COG_cat = names(labs),
labs = labs)
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean <- merge(genes.mean, labs)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0001))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
# Gene counts
gene.counts <- readRDS("/home/giovannib/Dropbox/CF_longitudinal_metagenome/gene_assignments/counts.rds")
gene.counts <- readRDS("/home/giovannib/Dropbox/CF_longitudinal_metagenome/gene_assignments/counts.rds")
colnames(gene.counts) <- str_remove(colnames(gene.counts), "CF_")
r.name <- gene.counts$best.og
gene.counts <- as.matrix(gene.counts[,-1])
rownames(gene.counts) <- r.name
gene.counts <- t(gene.counts)
gene.counts <- gene.counts[rownames(taxa.ab),]
saveRDS(gene.counts, "./data/gene_counts.rds")
gene.meta <- readRDS("/home/giovannib/Dropbox/CF_longitudinal_metagenome/gene_assignments/annotations.rds")
gene.meta <- gene.meta %>%
as.data.frame() %>%
rename_all(gsub, pattern = " ", replacement = "_") %>%
separate_rows(COG_cat, sep = ", ")
table(gene.meta$COG_cat)
colnames(gene.counts)
gene.meta <- gene.meta[match(colnames(gene.counts), gene.meta$best.og),]
table(gene.meta$COG_cat)
citation("ggbeeswarm")
?ggbeeswarm
citation("multcompView")
?multcompView
library(DESeq2)
library(compositions)
library(vegan)
library(caret)
library(pROC)
library(tidyverse)
library(ggbeeswarm)
library(patchwork)
library(multcompView)
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE,
eval = TRUE)
formatDataFromContrib <- function(pca, PC.name, top.vars){
contrib <- varContrib(pca)
colnames(contrib) <- gsub("PC", PC.name, colnames(contrib))
contrib <- rowMeans(contrib[, grep(PC.name, top.vars, value = T)])
contrib <- sort(contrib, decreasing = T)
lvls <- names(contrib)
data.frame(vars = factor(lvls, levels = lvls), contrib = contrib)
}
genes.contrib <- formatDataFromContrib(genes.pca, "F", top.vars)
genes.contrib
names(genes.contrib) <- c("best.og", "contrib")
formatDataFromContrib <- function(pca, PC.name, top.vars){
contrib <- varContrib(pca)
colnames(contrib) <- gsub("PC", PC.name, colnames(contrib))
contrib <- rowMeans(contrib[, grep(PC.name, top.vars, value = T)])
contrib <- sort(contrib, decreasing = T)
lvls <- names(contrib)
data.frame(vars = factor(lvls, levels = lvls), contrib = contrib,
row.names = NULL)
}
genes.contrib <- formatDataFromContrib(genes.pca, "F", top.vars)
genes.contrib
names(genes.contrib) <- c("best.og", "contrib")
genes.contrib
taxa.contrib <- formatDataFromContrib(taxa.pca, "T", top.vars)
taxa.contrib
names(taxa.contrib) <- c("taxa", "contrib")
p2 <- ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
taxa.contrib
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
# get gene contribution
genes.contrib <- formatDataFromContrib(genes.pca, "F", top.vars)
# get gene contribution
genes.contrib <- formatDataFromContrib(genes.pca, "F", top.vars)
names(genes.contrib) <- c("best.og", "contrib")
names(genes.contrib) <- c("best.og", "contrib")
taxa.contrib <- formatDataFromContrib(taxa.pca, "T", top.vars)
taxa.contrib <- formatDataFromContrib(taxa.pca, "T", top.vars)
names(taxa.contrib) <- c("taxa", "contrib")
meta.genes <- readRDS("data/gene_meta.rds")
table(meta.genes$COG_cat)
meta.genes <- merge(meta.genes, genes.contrib)
meta.genes$COG_cat <- reorder(meta.genes$COG_cat, meta.genes$contrib)
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
tuk <- TukeyHSD(genes.aov)
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs <- data.frame(COG_cat = names(labs),
labs = labs)
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean <- merge(genes.mean, labs)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
meta.genes <- readRDS("data/gene_meta.rds")
table(meta.genes$COG_cat)
meta.genes <- merge(meta.genes, genes.contrib)
meta.genes$COG_cat <- reorder(meta.genes$COG_cat, meta.genes$contrib, FUN = mean)
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
tuk <- TukeyHSD(genes.aov)
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs <- data.frame(COG_cat = names(labs),
labs = labs)
genes.mean <- do.call(rbind, by(meta.genes$contrib, meta.genes$COG_cat, mean_cl_boot))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean$COG_cat <- reorder(genes.mean$COG_cat, genes.mean$contrib)
genes.mean
genes.mean$COG_cat <- reorder(genes.mean$COG_cat, genes.mean$y)
genes.mean <- merge(genes.mean, labs)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
genes.mean <- with(meta.genes, do.call(rbind, by(contrib, COG_cat, mean_cl_boot)))
genes.mean
dim(genes.vst)
dim(genes.vst[, as.character(meta.genes$best.og)])
genes.vst <- genes.vst[, as.character(meta.genes$best.og)]
meta.genes$COG_cat %in% c("L", "U", "V")
genes.vst[,meta.genes$COG_cat %in% c("L", "U", "V")]
genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")]
dim(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")])
meta$CFTR
meta$genotype
by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], meta$genotype, colMeans)
by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], meta$genotype, rowMeans)
meta$genotype
by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], full.data$y, rowMeans)
full.data$y
dim(genes.vst)
dim(full.data)
y
by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], y, rowMeans)
by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], y, colMeans)
sapply(by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], y, colMeans),
mean)
sapply(by(genes.vst[, meta.genes$COG_cat %in% c("L", "U", "V")], y, colMeans),
mean_cl_boot)
sapply(strsplit(taxa.contrib$taxa, "_"), "[", 1)
taxa.contrib$taxa
sapply(strsplit(as.character(taxa.contrib$taxa), "_"), "[", 1)
genus <- sapply(strsplit(as.character(taxa.contrib$taxa), "_"), "[", 1)
taxa.contrib$genus <- factor(genus)
genus <- sapply(strsplit(as.character(taxa.contrib$taxa), "_"), "[", 1)
genus <- reorder(factor(genus), taxa.contrib$contrib)
taxa.contrib$genus <- genus
taxa.aov <- aov(contrib ~ genus, data = taxa.contrib)
summary(genes.aov)
summary(taxa.aov)
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
meta.genes <- readRDS("data/gene_meta.rds")
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
meta.genes <- readRDS("data/gene_meta.rds")
meta.genes <- merge(meta.genes, genes.contrib)
genes.aov <- aov(contrib ~ COG_cat, data = meta.genes)
summary(genes.aov)
knitr::kable(summary(genes.aov))
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1,
size = 2) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
tuk <- TukeyHSD(genes.aov)
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs <- data.frame(COG_cat = names(labs),
labs = labs)
genes.mean <- with(meta.genes, do.call(rbind, by(contrib, COG_cat, mean_cl_boot)))
genes.mean <- with(meta.genes, do.call(rbind, by(contrib, COG_cat, mean_cl_boot)))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean$COG_cat <- reorder(genes.mean$COG_cat, genes.mean$y)
genes.mean <- merge(genes.mean, labs)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1,
size = 2) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Average contribution on selected components (%)")
old <- par(mfrow = c(3, 2), oma=c(0,3,1,0))
invisible(sapply(model.list, rocCurve, model.test))
invisible(sapply(model.list, rocCurve, model.test))
mtext( 'Train data', side=3, line=-1, at=.28, outer=TRUE, cex=.8, font = 2)
mtext( 'Train data', side=3, line=-1, at=.28, outer=TRUE, cex=.8, font = 2)
mtext( 'Test data', side=3, line=-1, at=.77, outer=TRUE, cex=.8, font = 2)
mtext( 'RF', side=3, line=-2.9, at=-.04, outer=TRUE, cex=.8, font = 2)
mtext( 'GBM', side=3, line=-18, at=-.03, outer=TRUE, cex=.8, font = 2)
old <- par(mfrow = c(3, 2), oma=c(0,3,1,0))
invisible(sapply(model.list, rocCurve, model.test))
mtext( 'Train data', side=3, line=-1, at=.28, outer=TRUE, cex=.8, font = 2)
mtext( 'Test data', side=3, line=-1, at=.77, outer=TRUE, cex=.8, font = 2)
mtext( 'RF', side=3, line=-2.9, at=-.04, outer=TRUE, cex=.8, font = 2)
mtext( 'GBM', side=3, line=-18, at=-.03, outer=TRUE, cex=.8, font = 2)
mtext( 'SVM', side=3, line=-32.8, at=-.03, outer=TRUE, cex=.8, font = 2)
par(old)
tuk <- TukeyHSD(genes.aov)
labs <- multcompLetters(tuk$COG_cat[,4])[['Letters']]
labs <- data.frame(COG_cat = names(labs),
labs = labs)
genes.mean <- with(meta.genes, do.call(rbind, by(contrib, COG_cat, mean_cl_boot)))
genes.mean <- data.frame(COG_cat = rownames(genes.mean),
genes.mean)
genes.mean$COG_cat <- reorder(genes.mean$COG_cat, genes.mean$y)
genes.mean <- merge(genes.mean, labs)
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1,
size = 3) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Contribution on selected components (%)")
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1,
size = 3) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Contribution on selected components (%)")
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5))
ggplot(genes.mean, aes(x = COG_cat, y = y, ymin = ymin, ymax = ymax)) +
geom_errorbar(width = .3) +
geom_col() +
geom_text(aes(label = labs, y = ymax), vjust = -1,
size = 3) +
scale_y_continuous(expand = expand_scale(add = c(0,0.0003))) +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
ylab("Contribution on selected components (%)") +
xlab("COG categories")
s <- summary(genes.aov)
as.data.frame(s)
str(s)
s[[1]]
knitr::kable(s[[1]])
?multcompLetters
?mean_cl_boot
?Hmisc::smean.cl.boot()
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
ylab("Contribution on selected components (%)") +
xlab("Bacterial species")
ggplot(taxa.contrib, aes(x = taxa, y = contrib)) +
geom_col() +
theme_bw(base_size = 10, base_family = "Helvetica",
base_line_size = 0.25) +
scale_y_continuous(expand = expand_scale(add = c(0,0.1))) +
theme(axis.text.x = element_text(angle=90, hjust = 1, vjust = 0.5)) +
ylab("Contribution on selected components (%)") +
xlab("Bacterial species")
aliged <- Biostrings::readAAMultipleAlignment("/mnt/mario/covid19/Alignments/covid19_all_aliged.fasta")
aliged <- Biostrings::readDNAMultipleAlignment("/mnt/mario/covid19/Alignments/covid19_all_aliged.fasta")
Biostrings::readDNAStringSet("/mnt/mario/covid19/Alignments/covid19_all_aliged.fasta")
seqs <- Biostrings::readDNAStringSet("/mnt/mario/covid19/Alignments/covid19_all_aliged.fasta")
seqs <- Biostrings::readDNAStringSet("/mnt/mario/covid19/Alignments/covid19_all.fasta")
names(seqs)
library(Biostrings)
files <- list.files("/mnt/mario/covid19", ".fasta", full.names = T)
files
res <- lapply(files, function(f){
tryCatch(readDNAStringSet(f), error = function(e) return("ERROR"))
})
errors <- sapply(res, function(r){
if(is.character(r)){
return(r == "ERROR")
}
FALSE
})
table(errors)
if(any(errors)){
errors <- files[errors]
res <- res[!errors]
}
grep("covid19_all.fasta", files)
files <- grep("covid19_all.fasta", files, invert = T, value = T)
res <- lapply(files, function(f){
tryCatch(readDNAStringSet(f), error = function(e) return("ERROR"))
})
errors <- sapply(res, function(r){
if(is.character(r))
return(r == "ERROR")
FALSE
})
if(any(errors)){
errors <- files[errors]
res <- res[!errors]
}
aliged <- Biostrings::readDNAMultipleAlignment("/mnt/mario/covid19/Alignments/covid19_all_aliged.fasta")
seqs <- do.call(c, res)
names(seqs)
?regex
strsplit(names(seqs), "(\\s+)?[^\w](\\s+)?")
strsplit(names(seqs), "(\\s+)?[^\\w](\\s+)?")
strsplit(names(seqs), "(\\s+)?[^[:alnum:]](\\s+)?")
strsplit(names(seqs), "(\\s+)?[^[:alnum:] ](\\s+)?")
ids.meta <- strsplit(names(seqs), "(\\s+)?[^[:alnum:] ](\\s+)?")
ids <- sapply(ids.meta, "[", 1)
names(seqs) <- ids
seqs
ids.meta.std <- strsplit(names(seqs), "(\\s+)?\\|(\\s+)?")
ids.meta.std
seqs <- do.call(c, res)
ids.meta <- strsplit(names(seqs), "(\\s+)?[^[:alnum:] ](\\s+)?")
ids.meta.std <- strsplit(names(seqs), "(\\s+)?\\|(\\s+)?")
ids.meta.std
sapply(ids.meta.std, length)
max(sapply(ids.meta.std, length))
m <- matrix(ncol = max(sapply(ids.meta.std, length)),
nrow = length(ids.meta.std))
m
for(i in 1:nrow(m)){
m[i,] <- ids.meta.std[i,]
}
for(i in 1:nrow(m)){
m[i,] <- ids.meta.std[[i]]
}
ids.meta.std[[1]]
for(i in 1:nrow(m)){
l <- ids.meta.std[[1]]
length(l) <- ncol(m)
m[i,] <- l
}
m
ids.meta.std
m <- matrix(ncol = max(sapply(ids.meta.std, length)),
nrow = length(ids.meta.std))
for(i in 1:nrow(m)){
l <- ids.meta.std[[i]]
length(l) <- ncol(m)
m[i,] <- l
}
m
write.table(m, "/mnt/mario/covid19/all_ids.tsv",
sep = "\t", col.names = F,
row.names = F, quote = F)
ids <- sapply(ids.meta, "[", 1)
names(seqs) <- ids
library(DECIPHER)
seqs <- OrientNucleotides(seqs)
writeXStringSet(seqs, filepath = "covid19_all.fasta")
writeXStringSet(seqs, filepath = "/mnt/mario/covid19/covid19_all.fasta")
